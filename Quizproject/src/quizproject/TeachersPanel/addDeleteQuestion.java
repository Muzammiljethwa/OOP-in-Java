/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quizproject.TeachersPanel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
/**
 *
 * @author mzjet
 */
public class addDeleteQuestion extends javax.swing.JFrame {

    /**
     * Creates new form addDeleteQuestion
     */
    public addDeleteQuestion() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        getQuestion = new javax.swing.JTextField();
        getExp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        getOption1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        getOption3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        getOption2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        getOption4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        getTrueOption = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        deleteAll = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 36)); // NOI18N
        jLabel1.setText("Manage Questions");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Question :");

        getQuestion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getQuestionActionPerformed(evt);
            }
        });

        getExp.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getExp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getExpActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Explaination :");

        getOption1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getOption1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOption1ActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Option 1:");

        getOption3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getOption3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOption3ActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Option 3:");

        getOption2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getOption2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOption2ActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Option 2:");

        getOption4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getOption4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getOption4ActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Option 4:");

        getTrueOption.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getTrueOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getTrueOptionActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Correct Option :");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        try{
            JSONParser parser = new JSONParser();
            Object obj2 = parser.parse(new FileReader("./Data/Final_Quiz.json"));
            //
            JSONObject jsonObject = (JSONObject) obj2;
            //
            JSONArray quiz = (JSONArray) jsonObject.get("Quiz");
            //
            Object[] array2 = quiz.toArray();

            // { "S.No","Question", "Correct Answer", "Your Answer", "Points", "Explaination"}

            String[][] mainData = new String[array2.length][8];

            for(int i=0; i<array2.length; i++){
                JSONObject QuestionObject = (JSONObject) array2[i];
                mainData[i][0] = i+1 +"";
                mainData[i][1] = (String) QuestionObject.get("Question");

                JSONArray Options = (JSONArray) QuestionObject.get("Options");
                Object[] OptionsArray = Options.toArray();

                mainData[i][2] = (String) OptionsArray[0];
                mainData[i][3] = (String) OptionsArray[1];
                mainData[i][4] = (String) OptionsArray[2];
                mainData[i][5] = (String) OptionsArray[3];

                int trueIndex = (int) Long.parseLong( QuestionObject.get("TrueIndex").toString() );

                trueIndex = trueIndex+1;
                mainData[i][6] = (String) "OPTION-"+trueIndex;

                mainData[i][7] = (String) QuestionObject.get("Explanation");

            }

            String[] columnNames = { "ID","Question","Option 1","Option 2","Option 3","Option 4", "Correct Option","Explaination"};
            TableModel tableModel = new DefaultTableModel(mainData, columnNames);
            table.setModel(tableModel);
            UIDefaults defaults = UIManager.getLookAndFeelDefaults();
            if (defaults.get("Table.alternateRowColor") == null)
            defaults.put("Table.alternateRowColor", new Color(240, 240, 240));

            TableCellRenderer rendererFromHeader = table.getTableHeader().getDefaultRenderer();
            JLabel headerLabel = (JLabel) rendererFromHeader;
            headerLabel.setHorizontalAlignment(JLabel.CENTER);

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment( JLabel.CENTER );

            table.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
            table.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
            //        table.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );

            table.setFont(new Font("Tahome",Font.PLAIN,15));
            int height = table.getRowHeight();
            table.setRowHeight(height+10);

            //        table.setEnabled(false);

            JTableHeader Theader = table.getTableHeader();
            Theader.setFont(new Font("Tahome",Font.BOLD,20) );

            Theader.setBackground(Color.BLUE);
            Theader.setForeground(Color.BLACK);

            table.getTableHeader().setOpaque(false);

            table.getTableHeader().setBackground(Color.BLACK);

        }catch(Exception e){e.printStackTrace();};
        jScrollPane1.setViewportView(table);

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        add.setText("Add Question");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(255, 255, 255));
        delete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        delete.setText("Delete Question");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        deleteAll.setBackground(new java.awt.Color(255, 255, 255));
        deleteAll.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        deleteAll.setText("Delete All");
        deleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAllActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(getOption3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(getOption1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(getOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(getOption4, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(getQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 804, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(240, 240, 240)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(getTrueOption, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getExp, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(474, 474, 474))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(getQuestion)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(getOption1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(getOption3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(getOption2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(getOption4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(getTrueOption, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(getExp, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getQuestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getQuestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getQuestionActionPerformed

    private void getExpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getExpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getExpActionPerformed

    private void getOption1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOption1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getOption1ActionPerformed

    private void getOption3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOption3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getOption3ActionPerformed

    private void getOption2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOption2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getOption2ActionPerformed

    private void getOption4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getOption4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getOption4ActionPerformed

    private void getTrueOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getTrueOptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_getTrueOptionActionPerformed
public void addQuestion(String question, String[] options, int correctOption, String explanation)throws Exception{

        JSONParser parser = new JSONParser();

        Object obj = parser.parse(new FileReader("./Data/Final_Quiz.json"));

        JSONObject jsonObject = (JSONObject) obj;

        JSONArray quiz = (JSONArray) jsonObject.get("Quiz");

        Object[] array = quiz.toArray();

        int id = array.length +1;

        JSONObject newObject = new JSONObject();

        newObject.put("Qustion", "<html> " + question + " </html>");

        JSONArray ray = new JSONArray();
        ray.add(options[0]);
        ray.add(options[1]);
        ray.add(options[2]);
        ray.add(options[3]);

        newObject.put("Options", ray);
        newObject.put("id", id);
        newObject.put("TrueIndex", correctOption-1);

        if (explanation.isEmpty()){ newObject.put("Explanation", "Not Available"); }
        else{newObject.put("Explanation", explanation);}

        quiz.add(newObject);

        JSONObject quizObject = new JSONObject();
        quizObject.put("Quiz", quiz);

//        JSONObject finalArray = new JSONObject();
//        finalArray.put("",quizObject);

        Gson gson = new GsonBuilder().disableHtmlEscaping().setPrettyPrinting().create();
        String json = gson.toJson(quizObject);

        FileWriter file = new FileWriter("./Data/Final_Quiz.json");
        file.write(json);
        file.close();

    }

    public boolean isNumeric(String str) { 
      try {  
        Integer.parseInt(str);  
        return true;
      } catch(NumberFormatException e){  
        return false;  
      }  
    }
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        // TODO add your handling code here:
        try{
            if(getQuestion.getText().equals("") || getOption1.getText().equals("") || getOption2.getText().equals("") || getOption3.getText().equals("")
                    || getOption4.getText().equals("") || getTrueOption.getText().equals("") || getExp.getText().equals("")   ){ 
                JOptionPane.showMessageDialog(this, "Please Enter All Data"); 
                getQuestion.setText("");
                getOption1.setText("");
                getOption2.setText("");
                getOption3.setText("");
                getOption4.setText("");
                getTrueOption.setText("");
                getExp.setText("");
            }
            else{ 
                if( isInteger( getTrueOption.getText() ).equals("false") ){
                    JOptionPane.showMessageDialog(this, "Please Enter Integer in Correct Option");
                }
                else{
                String[] Optionsli = new String[4];
                
                Optionsli[0] = getOption1.getText();
                Optionsli[1] = getOption2.getText();
                Optionsli[2] = getOption3.getText();
                Optionsli[3] = getOption4.getText();
                
                int trueoption = Integer.parseInt( getTrueOption.getText() );
                
                addQuestion(getQuestion.getText(), Optionsli , trueoption, getExp.getText());
////              String[] li = new String[4];
////              addQuestion("Whats myy name check?",li,2,"");
//
//
                // get ID
                    JSONParser parser = new JSONParser();

                    Object obj = parser.parse(new FileReader("./Data/Final_Quiz.json"));

                    JSONObject jsonObject = (JSONObject) obj;

                    JSONArray quiz = (JSONArray) jsonObject.get("Quiz");

                    Object[] array = quiz.toArray();
                    
                    int id = array.length;
                    String setId = id+"";
                // end get ID

                DefaultTableModel tblModel = (DefaultTableModel) table.getModel();
                String[] data = {setId,getQuestion.getText(),getOption1.getText(),getOption2.getText(),getOption3.getText(),getOption4.getText(),
                                 getTrueOption.getText(), getExp.getText()};
                tblModel.addRow(data);

              
              JOptionPane.showMessageDialog(this, "Added Successfully");
              
              getQuestion.setText("");
              getOption1.setText("");
              getOption2.setText("");
              getOption3.setText("");
              getOption4.setText("");
              getTrueOption.setText("");
              getExp.setText("");
                }
             
            
            }
        }catch(Exception e){e.printStackTrace();}      
        
    }//GEN-LAST:event_addActionPerformed
public String isInteger(String s) {
    try { 
        Integer.parseInt(s); 
    } catch(Exception e) { 
        return "false"; 
    }
    // only got here if we didn't return false
    return "true";
}
    
    public void deleteQuestion(int id)throws Exception{

        JSONParser parser = new JSONParser();

        Object obj = parser.parse(new FileReader("./Data/Final_Quiz.json"));

        JSONObject jsonObject = (JSONObject) obj;

        JSONArray quiz = (JSONArray) jsonObject.get("Quiz");
        
        quiz.remove(id-1);
        
        Object[] array2 = quiz.toArray();

        for(int i=0; i<array2.length; i++){

            JSONObject questionObject = (JSONObject) array2[i];
            // System.out.println(questionObject.get("Question"));
            questionObject.put("id", i+1);

        }
        
//        for(Object i : quiz){
//            System.out.println(i);
//        }
        
        JSONObject quizObject = new JSONObject();
        quizObject.put("Quiz", quiz);

//        JSONObject finalArray = new JSONObject();
//        finalArray.put("",quizObject);

        Gson gson = new GsonBuilder().disableHtmlEscaping().setPrettyPrinting().create();
        String json = gson.toJson(quizObject);
        
        FileWriter file = new FileWriter("./Data/Final_Quiz.json");
        file.write(json);
        file.close();

    }
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        try{
            
            JSONParser parser = new JSONParser();

            Object obj = parser.parse(new FileReader("./Data/Final_Quiz.json"));

            JSONObject jsonObject = (JSONObject) obj;

            JSONArray quiz = (JSONArray) jsonObject.get("Quiz");

            Object[] array = quiz.toArray();
            
            
            
            DefaultTableModel tblModel = (DefaultTableModel) table.getModel();
            if( table.getSelectedRowCount() == 1){ 
                
                JSONObject StudentObject = (JSONObject) array[table.getSelectedRow()];
                int id = Integer.parseInt( StudentObject.get("id").toString() ) ;
                
                deleteQuestion(id);
                
                tblModel.removeRow(table.getSelectedRow());
                JOptionPane.showMessageDialog(this, "Deleted Successfully");
                
            }else{
                if(table.getRowCount() == 0){JOptionPane.showMessageDialog(this, "Table is Empty");}
                else{JOptionPane.showMessageDialog(this, "Please Select Single Row to Delete");}
            }
            
            
        }catch(Exception e){e.printStackTrace();}
        
        
    }//GEN-LAST:event_deleteActionPerformed

    private void deleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAllActionPerformed
        // TODO add your handling code here:
        try{
            JSONParser parser = new JSONParser();

            Object obj = parser.parse(new FileReader("./Data/Final_Quiz.json"));

            JSONObject jsonObject = (JSONObject) obj;

            JSONArray quiz = (JSONArray) jsonObject.get("Quiz");

            Object[] array = quiz.toArray();
            
           
        DefaultTableModel tblModel = (DefaultTableModel) table.getModel();
        
        for(int i=0; i< table.getRowCount(); i++){
            
            JSONObject StudentObject = (JSONObject) array[i];
            int id = Integer.parseInt( StudentObject.get("id").toString() );

            deleteQuestion(id);
            
            tblModel.removeRow(i);
        }
        
        }catch(Exception e) {e.printStackTrace();}
        
        
        
        
    }//GEN-LAST:event_deleteAllActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addDeleteQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addDeleteQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addDeleteQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addDeleteQuestion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addDeleteQuestion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton delete;
    private javax.swing.JButton deleteAll;
    private javax.swing.JTextField getExp;
    private javax.swing.JTextField getOption1;
    private javax.swing.JTextField getOption2;
    private javax.swing.JTextField getOption3;
    private javax.swing.JTextField getOption4;
    private javax.swing.JTextField getQuestion;
    private javax.swing.JTextField getTrueOption;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
