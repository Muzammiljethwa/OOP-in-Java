<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Component id="jPanel1" alignment="0" max="32767" attributes="0"/>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="1" attributes="0">
              <Component id="jPanel1" min="-2" max="-2" attributes="0"/>
              <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="jPanel1">
      <Properties>
        <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
      </Properties>

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Group type="102" attributes="0">
                          <Component id="jScrollPane1" max="32767" attributes="0"/>
                          <EmptySpace max="-2" attributes="0"/>
                      </Group>
                      <Group type="102" alignment="1" attributes="0">
                          <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
                          <Component id="jLabel1" min="-2" pref="223" max="-2" attributes="0"/>
                          <EmptySpace min="-2" pref="415" max="-2" attributes="0"/>
                      </Group>
                  </Group>
              </Group>
              <Group type="102" attributes="0">
                  <EmptySpace min="-2" pref="598" max="-2" attributes="0"/>
                  <Component id="jButton2" min="-2" pref="202" max="-2" attributes="0"/>
                  <EmptySpace type="unrelated" max="-2" attributes="0"/>
                  <Component id="jButton1" min="-2" pref="236" max="-2" attributes="0"/>
                  <EmptySpace max="32767" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <Component id="jLabel1" min="-2" pref="53" max="-2" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="jScrollPane1" min="-2" pref="518" max="-2" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Component id="jButton1" pref="68" max="32767" attributes="0"/>
                      <Component id="jButton2" max="32767" attributes="0"/>
                  </Group>
                  <EmptySpace max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Component class="javax.swing.JLabel" name="jLabel1">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="SansSerif" size="36" style="1"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Result Sheet"/>
          </Properties>
        </Component>
        <Container class="javax.swing.JScrollPane" name="jScrollPane1">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
          </Properties>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTable" name="table">
              <Properties>
                <Property name="model" type="javax.swing.table.TableModel" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code=" tableModel&#xa;    " type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="table.getColumn(&quot;Quiz Sheet&quot;).setCellRenderer(new ButtonRenderer());&#xa;    table.getColumn(&quot;Quiz Sheet&quot;).setCellEditor(&#xa;    new ButtonEditor(new JCheckBox()));&#xa;    &#xa;     &#xa;    UIDefaults defaults = UIManager.getLookAndFeelDefaults();&#xa;    if (defaults.get(&quot;Table.alternateRowColor&quot;) == null)&#xa;        defaults.put(&quot;Table.alternateRowColor&quot;, new Color(240, 240, 240));&#xa;    &#xa;    DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();&#xa;    centerRenderer.setHorizontalAlignment( JLabel.CENTER );&#xa;&#xa;    table.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );&#xa;    table.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );&#xa;    table.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );&#xa;        &#xa;        &#xa;    table.setFont(new Font(&quot;Tahome&quot;,Font.PLAIN,15));&#xa;    int height = table.getRowHeight();&#xa;    table.setRowHeight(height+10);&#xa;&#xa;    JTableHeader Theader = table.getTableHeader();&#xa;    Theader.setFont(new Font(&quot;Tahome&quot;,Font.BOLD,20) );&#xa;    Theader.setBackground(Color.decode(&quot;#000066&quot;));&#xa;    Theader.setForeground(Color.BLACK);&#xa;&#xa;    table.getTableHeader().setBackground(Color.BLACK);&#xa;&#xa;    TableCellRenderer rendererFromHeader = table.getTableHeader().getDefaultRenderer();&#xa;    JLabel headerLabel = (JLabel) rendererFromHeader;&#xa;    headerLabel.setHorizontalAlignment(JLabel.CENTER);  &#xa;    &#xa;    table.setFont(new Font(&quot;Tahome&quot;,Font.PLAIN,15));&#xa;//    int height = table.getRowHeight();&#xa;    table.setRowHeight(height+10);&#xa;    &#xa;    &#xa;    // Color Column of Quiz Submitted&#xa;        int column_index = 2;&#xa;        &#xa;        table.getColumnModel().getColumn(column_index).setCellRenderer(new DefaultTableCellRenderer() {&#xa;            @Override&#xa;            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {&#xa;                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);&#xa;                String submittedValue =table.getValueAt(row, column_index).toString();&#xa;         &#xa;                if (submittedValue.equals(&quot;Submitted&quot;)) {&#xa;&#xa;                    c.setForeground(Color.decode(&quot;#3366ff&quot;));&#xa;                    c.setFont(new Font(&quot;Tahome&quot;,Font.BOLD,15));&#xa;                    &#xa;//                    c.setBackground(Color.RED);&#xa;//                    c.setForeground(Color.WHITE);&#xa;                }&#xa;                else {&#xa;//                    c.setBackground(Color.RED);&#xa;                    c.setForeground(Color.RED);&#xa;//                    c.setFont(new Font(&quot;Tahome&quot;,Font.BOLD,15));&#xa;                }&#xa;                &#xa;//                int rendererWidth = c.getPreferredSize().width;&#xa;//                    TableColumn tableColumn = table.getColumnModel().getColumn(column);&#xa;//                    tableColumn.setPreferredWidth( Math.max(rendererWidth + table.getIntercellSpacing().width,tableColumn.getPreferredWidth()));&#xa;//&#xa;//                DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();&#xa;//                rightRenderer.setHorizontalAlignment(JLabel.CENTER);&#xa;//                table.getColumnModel().getColumn(column).setCellRenderer(rightRenderer);&#xa;                &#xa;                return c;&#xa;            }&#xa;            &#xa;        });&#xa;        &#xa;        &#xa;        &#xa;        &#xa;        // Color Column of Result&#xa;        int column_index2 = 5;&#xa;        table.getColumnModel().getColumn(column_index2).setCellRenderer(new DefaultTableCellRenderer() {&#xa;            @Override&#xa;            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {&#xa;                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);&#xa;                String submittedValue = table.getValueAt(row, column_index2).toString();&#xa;         &#xa;                if (submittedValue.equals(&quot;Fail&quot;)) {&#xa;//       &#xa;                    c.setBackground(Color.decode(&quot;#ff3333&quot;));&#xa;                    c.setForeground(Color.WHITE);&#xa;                    c.setFont(new Font(&quot;Tahome&quot;,Font.PLAIN,15));&#xa;                }&#xa;                else {&#xa;                    c.setBackground(Color.decode(&quot;#4dff4d&quot;));&#xa;                    c.setForeground(Color.BLACK);&#xa;                    c.setFont(new Font(&quot;Tahome&quot;,Font.PLAIN,15));&#xa;                }&#xa;                return c;&#xa;            }&#xa;        });&#xa;&#xa;        // End Color Column&#xa;        &#xa;//        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();&#xa;//        centerRenderer.setHorizontalAlignment( JLabel.CENTER );&#xa;//        &#xa;//        String[] columnNames = {&quot;Seat Number&quot;,&quot;Names&quot;, &quot;Quiz&quot;,&quot;Score&quot;,&quot;Percentage%&quot;,&quot;Result&quot;,&quot;Quiz Sheet&quot;};&#xa;//        &#xa;//        for(int x=0;x&lt;columnNames.length;x++){&#xa;//           table.getColumnModel().getColumn(x).setCellRenderer( centerRenderer );&#xa;//        }&#xa;&#xa;        &#xa;        &#xa;        &#xa;        &#xa;        &#xa;        &#xa;        }catch(Exception e){e.printStackTrace();};"/>
                <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="try{&#xa;    // my code&#xa;    JSONParser parser = new JSONParser();&#xa;&#xa;        Object obj = parser.parse(new FileReader(&quot;./Data/QuizScore.json&quot;));&#xa;&#xa;        JSONArray student = (JSONArray) obj;&#xa;&#xa;        Object[] array = student.toArray();&#xa;        &#xa;        Object[][] mainData = new Object[array.length][7];&#xa;        &#xa;        for(int i=0; i&lt;array.length; i++){&#xa;            &#xa;            JSONObject StudentObject = (JSONObject) array[i];&#xa;            &#xa;            mainData[i][0] = StudentObject.get(&quot;SeatNumber&quot;);&#xa;            mainData[i][1] = StudentObject.get(&quot;Name&quot;);&#xa;            mainData[i][6] = StudentObject.get(&quot;SeatNumber&quot;);&#xa;&#xa;            &#xa;            if(StudentObject.get(&quot;Score&quot;).equals(&quot;&quot;)){&#xa;                &#xa;                mainData[i][2] = &quot;Not Submitted&quot;;&#xa;                mainData[i][3] =&quot;NA&quot;;&#xa;                mainData[i][4] = &quot;NA&quot;;&#xa;                mainData[i][5] = &quot;Fail&quot;;&#xa;                &#xa;            }&#xa;            else{&#xa;                &#xa;                mainData[i][2] = &quot;Submitted&quot;;&#xa;                mainData[i][3] = StudentObject.get(&quot;Score&quot;);&#xa;                &#xa;                int getScore = Integer.parseInt( StudentObject.get(&quot;Score&quot;).toString().split(&quot;/&quot;)[0] );&#xa;                int totalScore = Integer.parseInt( StudentObject.get(&quot;Score&quot;).toString().split(&quot;/&quot;)[1] );&#xa;&#xa;                double percentage = (getScore * 100 )/ totalScore;&#xa;                mainData[i][4] = percentage + &quot;%&quot;;&#xa;                &#xa;                if(percentage&gt;=50.00){mainData[i][5] = &quot;Pass&quot;;}&#xa;                else{mainData[i][5] = &quot;Fail&quot;;}&#xa;                &#xa;                }&#xa;            &#xa;            &#xa;                }&#xa;        &#xa;      String[] columnNames = {&quot;Seat Number&quot;,&quot;Names&quot;, &quot;Quiz&quot;,&quot;Score&quot;,&quot;Percentage%&quot;,&quot;Result&quot;,&quot;Quiz Sheet&quot;};&#xa;&#xa;TableModel tableModel = new DefaultTableModel(mainData, columnNames);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Component class="javax.swing.JButton" name="jButton1">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="18" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Download"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton2">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="18" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Close"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton2ActionPerformed"/>
          </Events>
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
