<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Component id="jPanel1" alignment="0" max="32767" attributes="0"/>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Component id="jPanel1" alignment="1" min="-2" max="-2" attributes="0"/>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="jPanel1">
      <Properties>
        <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
      </Properties>

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" attributes="0">
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Group type="102" attributes="0">
                          <EmptySpace max="-2" attributes="0"/>
                          <Component id="jScrollPane2" max="32767" attributes="0"/>
                      </Group>
                      <Group type="102" attributes="0">
                          <EmptySpace min="-2" pref="425" max="-2" attributes="0"/>
                          <Component id="jLabel1" min="-2" pref="216" max="-2" attributes="0"/>
                          <EmptySpace min="0" pref="400" max="32767" attributes="0"/>
                      </Group>
                  </Group>
                  <EmptySpace max="-2" attributes="0"/>
              </Group>
              <Group type="102" alignment="0" attributes="0">
                  <EmptySpace min="-2" pref="72" max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Group type="103" alignment="0" groupAlignment="0" attributes="0">
                          <Group type="102" alignment="1" attributes="0">
                              <Component id="jLabel9" min="-2" pref="81" max="-2" attributes="0"/>
                              <EmptySpace type="separate" max="-2" attributes="0"/>
                              <Component id="jLabel8" min="-2" pref="181" max="-2" attributes="0"/>
                          </Group>
                          <Group type="102" alignment="0" attributes="0">
                              <EmptySpace min="-2" pref="79" max="-2" attributes="0"/>
                              <Component id="jLabel2" min="-2" pref="69" max="-2" attributes="0"/>
                              <EmptySpace type="separate" max="-2" attributes="0"/>
                              <Component id="jLabel3" min="-2" pref="181" max="-2" attributes="0"/>
                          </Group>
                          <Group type="102" alignment="0" attributes="0">
                              <Component id="jLabel4" min="-2" pref="148" max="-2" attributes="0"/>
                              <EmptySpace type="separate" max="-2" attributes="0"/>
                              <Component id="jLabel5" min="-2" pref="181" max="-2" attributes="0"/>
                          </Group>
                      </Group>
                      <Group type="102" alignment="0" attributes="0">
                          <EmptySpace min="-2" pref="78" max="-2" attributes="0"/>
                          <Component id="jLabel7" min="-2" pref="81" max="-2" attributes="0"/>
                          <EmptySpace max="-2" attributes="0"/>
                          <Component id="setname" min="-2" pref="296" max="-2" attributes="0"/>
                      </Group>
                  </Group>
                  <EmptySpace max="32767" attributes="0"/>
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Component id="jButton2" alignment="1" min="-2" pref="217" max="-2" attributes="0"/>
                      <Component id="jButton1" alignment="1" min="-2" pref="217" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace min="144" pref="144" max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Group type="102" alignment="0" attributes="0">
                          <Component id="jLabel1" min="-2" pref="58" max="-2" attributes="0"/>
                          <EmptySpace max="-2" attributes="0"/>
                          <Group type="103" groupAlignment="3" attributes="0">
                              <Component id="jLabel7" alignment="3" min="-2" pref="48" max="-2" attributes="0"/>
                              <Component id="setname" alignment="3" min="-2" pref="48" max="-2" attributes="0"/>
                          </Group>
                          <EmptySpace max="-2" attributes="0"/>
                          <Group type="103" groupAlignment="3" attributes="0">
                              <Component id="jLabel4" alignment="3" min="-2" pref="48" max="-2" attributes="0"/>
                              <Component id="jLabel5" alignment="3" min="-2" pref="48" max="-2" attributes="0"/>
                          </Group>
                          <EmptySpace max="-2" attributes="0"/>
                          <Group type="103" groupAlignment="3" attributes="0">
                              <Component id="jLabel2" alignment="3" min="-2" pref="48" max="-2" attributes="0"/>
                              <Component id="jLabel3" alignment="3" min="-2" pref="48" max="-2" attributes="0"/>
                          </Group>
                          <EmptySpace max="-2" attributes="0"/>
                          <Group type="103" groupAlignment="3" attributes="0">
                              <Component id="jLabel8" alignment="3" min="-2" pref="48" max="-2" attributes="0"/>
                              <Component id="jLabel9" alignment="3" min="-2" pref="48" max="-2" attributes="0"/>
                          </Group>
                      </Group>
                      <Group type="102" alignment="0" attributes="0">
                          <EmptySpace min="-2" pref="104" max="-2" attributes="0"/>
                          <Component id="jButton1" min="-2" pref="64" max="-2" attributes="0"/>
                          <EmptySpace type="separate" max="-2" attributes="0"/>
                          <Component id="jButton2" min="-2" pref="64" max="-2" attributes="0"/>
                      </Group>
                  </Group>
                  <EmptySpace min="-2" pref="66" max="-2" attributes="0"/>
                  <Component id="jScrollPane2" min="-2" pref="267" max="-2" attributes="0"/>
                  <EmptySpace max="32767" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Component class="javax.swing.JLabel" name="jLabel1">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="SansSerif" size="36" style="1"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Score Sheet"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel2">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Score:"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel3">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor" postCode="try{&#xa;            String seatNumber = getString();&#xa;            JSONParser parser = new JSONParser();&#xa;&#xa;            // get question and student&#xa;&#xa;            Object obj = parser.parse(new FileReader(&quot;./Data/QuizScore.json&quot;));&#xa;&#xa;            JSONArray student = (JSONArray) obj;&#xa;&#xa;            Object[] array = student.toArray();&#xa;            int index =0;&#xa;&#xa;            for(int i=0; i&lt;array.length; i++){&#xa;&#xa;                JSONObject StudentObject = (JSONObject) array[i];&#xa;                if(StudentObject.get(&quot;SeatNumber&quot;).equals(seatNumber)) {&#xa;                    index = i;&#xa;                    break;&#xa;&#xa;                }&#xa;            }&#xa;&#xa;            JSONObject StudentObject = (JSONObject) array[index];">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="StudentObject.get(&quot;Score&quot;).toString()" type="code"/>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="} catch(Exception e){e.printStackTrace();};"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel4">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Seat Number:"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel5">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor" postCode="try{&#xa;            String seatNumber = getString();&#xa;            JSONParser parser = new JSONParser();&#xa;&#xa;            // get question and student&#xa;&#xa;            Object obj = parser.parse(new FileReader(&quot;./Data/QuizScore.json&quot;));&#xa;&#xa;            JSONArray student = (JSONArray) obj;&#xa;&#xa;            Object[] array = student.toArray();&#xa;            int index =0;&#xa;&#xa;            for(int i=0; i&lt;array.length; i++){&#xa;&#xa;                JSONObject StudentObject = (JSONObject) array[i];&#xa;                if(StudentObject.get(&quot;SeatNumber&quot;).equals(seatNumber)) {&#xa;                    index = i;&#xa;                    break;&#xa;&#xa;                }&#xa;            }&#xa;&#xa;            JSONObject StudentObject = (JSONObject) array[index];">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="StudentObject.get(&quot;SeatNumber&quot;).toString()" type="code"/>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="} catch(Exception e){e.printStackTrace();};"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JLabel" name="setname">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor" postCode="try{&#xa;            String seatNumber = getString();&#xa;            JSONParser parser = new JSONParser();&#xa;&#xa;            // get question and student&#xa;&#xa;            Object obj = parser.parse(new FileReader(&quot;./Data/QuizScore.json&quot;));&#xa;&#xa;            JSONArray student = (JSONArray) obj;&#xa;&#xa;            Object[] array = student.toArray();&#xa;            int index =0;&#xa;&#xa;            for(int i=0; i&lt;array.length; i++){&#xa;&#xa;                JSONObject StudentObject = (JSONObject) array[i];&#xa;                if(StudentObject.get(&quot;SeatNumber&quot;).equals(seatNumber)) {&#xa;                    index = i;&#xa;                    break;&#xa;&#xa;                }&#xa;            }&#xa;&#xa;            JSONObject StudentObject = (JSONObject) array[index];">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="StudentObject.get(&quot;Name&quot;).toString()" type="code"/>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="}catch(Exception e){ e.printStackTrace(); };"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel7">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Name:"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel8">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor" postCode="try{&#xa;            String seatNumber = getString();&#xa;            JSONParser parser = new JSONParser();&#xa;&#xa;            // get question and student&#xa;&#xa;            Object obj = parser.parse(new FileReader(&quot;./Data/QuizScore.json&quot;));&#xa;&#xa;            JSONArray student = (JSONArray) obj;&#xa;&#xa;            Object[] array = student.toArray();&#xa;            int index =0;&#xa;&#xa;            for(int i=0; i&lt;array.length; i++){&#xa;&#xa;                JSONObject StudentObject = (JSONObject) array[i];&#xa;                if(StudentObject.get(&quot;SeatNumber&quot;).equals(seatNumber)) {&#xa;                    index = i;&#xa;                    break;&#xa;&#xa;                }&#xa;            }&#xa;&#xa;        JSONObject StudentObject = (JSONObject) array[index];&#xa;        &#xa;        int getScore = Integer.parseInt( StudentObject.get(&quot;Score&quot;).toString().split(&quot;/&quot;)[0] );&#xa;        int totalScore = Integer.parseInt( StudentObject.get(&quot;Score&quot;).toString().split(&quot;/&quot;)[1] );&#xa;&#xa;        double percentage = (getScore * 100 )/ totalScore;&#xa;        String result = &quot;Pass&quot;;&#xa;        if(percentage&gt;=50.00){ result = &quot;Pass&quot;;}&#xa;        else{ result = &quot;Fail&quot;;}">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
              <Connection code="result" type="code"/>
            </Property>
          </Properties>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="} catch(Exception e){e.printStackTrace();};"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel9">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Result:"/>
          </Properties>
        </Component>
        <Container class="javax.swing.JScrollPane" name="jScrollPane2">
          <AuxValues>
            <AuxValue name="autoScrollPane" type="java.lang.Boolean" value="true"/>
          </AuxValues>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTable" name="table">
              <Properties>
                <Property name="model" type="javax.swing.table.TableModel" editor="org.netbeans.modules.form.RADConnectionPropertyEditor">
                  <Connection code=" tableModel&#xa;    " type="code"/>
                </Property>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_InitCodePost" type="java.lang.String" value="UIDefaults defaults = UIManager.getLookAndFeelDefaults();&#xa;        if (defaults.get(&quot;Table.alternateRowColor&quot;) == null)&#xa;            defaults.put(&quot;Table.alternateRowColor&quot;, new Color(240, 240, 240));&#xa;&#xa;                &#xa;        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();&#xa;        centerRenderer.setHorizontalAlignment( JLabel.CENTER );&#xa;        &#xa;        table.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );&#xa;        table.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );&#xa;&#xa;        &#xa;        table.setFont(new Font(&quot;Tahome&quot;,Font.PLAIN,15));&#xa;        int height = table.getRowHeight();&#xa;        table.setRowHeight(height+10);&#xa;        &#xa;//        table.setEnabled(false);&#xa;        &#xa;        &#xa;    JTableHeader Theader = table.getTableHeader();&#xa;    Theader.setFont(new Font(&quot;Tahome&quot;,Font.BOLD,20) );&#xa;        &#xa;    Theader.setBackground(Color.BLUE);&#xa;    Theader.setForeground(Color.BLACK);&#xa;&#xa;    table.getTableHeader().setOpaque(false);&#xa;&#xa;    table.getTableHeader().setBackground(Color.BLACK);&#xa;        &#xa;//            System.out.println(table.getValueAt(1, 4).toString());&#xa;        &#xa;        int column_index = 3;&#xa;        &#xa;        table.getColumnModel().getColumn(column_index).setCellRenderer(new DefaultTableCellRenderer() {&#xa;            @Override&#xa;            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {&#xa;                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);&#xa;                String submittedValue = table.getValueAt(row, 4).toString();&#xa;         &#xa;                if (submittedValue.equals(&quot;1&quot;)) {&#xa;&#xa;                    c.setBackground(Color.decode(&quot;#4dff4d&quot;));&#xa;                    c.setForeground(Color.BLACK);&#xa;                    c.setFont(new Font(&quot;Tahome&quot;,Font.PLAIN,15));&#xa;                }&#xa;                else {&#xa;                    c.setBackground(Color.decode(&quot;#ff3333&quot;));&#xa;                    c.setForeground(Color.WHITE);&#xa;                    c.setFont(new Font(&quot;Tahome&quot;,Font.PLAIN,15));&#xa;                }&#xa;                &#xa;//                int rendererWidth = c.getPreferredSize().width;&#xa;//                    TableColumn tableColumn = table.getColumnModel().getColumn(column);&#xa;//                    tableColumn.setPreferredWidth( Math.max(rendererWidth + table.getIntercellSpacing().width,tableColumn.getPreferredWidth()));&#xa;//&#xa;//                DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();&#xa;//                rightRenderer.setHorizontalAlignment(JLabel.CENTER);&#xa;//                table.getColumnModel().getColumn(column).setCellRenderer(rightRenderer);&#xa;                &#xa;                return c;&#xa;            }&#xa;            &#xa;        });&#xa;        &#xa;        TableColumn column1 = table.getColumnModel().getColumn(1);&#xa;        column1.setPreferredWidth(300);&#xa;        &#xa;        TableColumn column5 = table.getColumnModel().getColumn(5);&#xa;        column5.setPreferredWidth(450);&#xa;        &#xa;        TableColumn column2 = table.getColumnModel().getColumn(2);&#xa;        column2.setPreferredWidth(300);&#xa;        &#xa;        TableColumn column3 = table.getColumnModel().getColumn(3);&#xa;        column3.setPreferredWidth(300);&#xa;        &#xa;        TableColumn column4 = table.getColumnModel().getColumn(4);&#xa;        column4.setPreferredWidth(100);&#xa;    &#xa;        &#xa;        &#xa;        &#xa;        &#xa;        &#xa;        &#xa;        }catch(Exception e){e.printStackTrace();};"/>
                <AuxValue name="JavaCodeGenerator_InitCodePre" type="java.lang.String" value="try{&#xa;        String seatNumber = getString();&#xa;        System.out.print(seatNumber);&#xa;        JSONParser parser = new JSONParser();&#xa;            &#xa;            // get question and student &#xa;            &#xa;            Object obj = parser.parse(new FileReader(&quot;./Data/QuizScore.json&quot;));&#xa;&#xa;            JSONArray student = (JSONArray) obj;&#xa;&#xa;            Object[] array = student.toArray();&#xa;            int index =0;&#xa;&#xa;            for(int i=0; i&lt;array.length; i++){&#xa;&#xa;                JSONObject StudentObject = (JSONObject) array[i];&#xa;                if(StudentObject.get(&quot;SeatNumber&quot;).equals(seatNumber)) {&#xa;                    index = i;&#xa;                    break;&#xa;                &#xa;                    }       &#xa;            }&#xa;            &#xa;            JSONObject StudentObject = (JSONObject) array[index];&#xa;            JSONArray QuestionIndex = (JSONArray) StudentObject.get(&quot;QuestionIndex&quot;);&#xa;            Object[] QuestionIndexArray = QuestionIndex.toArray();&#xa;            &#xa;            JSONArray GivenAns = (JSONArray) StudentObject.get(&quot;GivenAnswers&quot;);&#xa;            Object[] GivenAnsArray = GivenAns.toArray();&#xa;            &#xa;            // End get question and student &#xa;            &#xa;            // Starting Reading Question&#xa;            &#xa;            Object obj2 = parser.parse(new FileReader(&quot;./Data/Final_Quiz.json&quot;));&#xa;//&#xa;            JSONObject jsonObject = (JSONObject) obj2;&#xa;//&#xa;            JSONArray quiz = (JSONArray) jsonObject.get(&quot;Quiz&quot;);&#xa;//&#xa;            Object[] array2 = quiz.toArray();&#xa;            &#xa;            // { &quot;S.No&quot;,&quot;Question&quot;, &quot;Correct Answer&quot;, &quot;Your Answer&quot;, &quot;Points&quot;, &quot;Explaination&quot;}&#xa;            &#xa;            String[][] mainData = new String[QuestionIndexArray.length][6];&#xa;            &#xa;            for(int i=0; i&lt;QuestionIndexArray.length; i++){&#xa;                JSONObject QuestionObject = (JSONObject) array2[(int) Long.parseLong(QuestionIndexArray[i].toString()) ];&#xa;                &#xa;                mainData[i][0] = i+1+&quot;&quot;;&#xa;                mainData[i][1] = (String) QuestionObject.get(&quot;Question&quot;);&#xa;                &#xa;                JSONArray Options = (JSONArray) QuestionObject.get(&quot;Options&quot;);&#xa;                Object[] OptionsArray = Options.toArray();&#xa;                &#xa;                int trueIndex = (int) Long.parseLong( QuestionObject.get(&quot;TrueIndex&quot;).toString() );&#xa;                &#xa;                mainData[i][2] = (String) OptionsArray[trueIndex];&#xa;                mainData[i][3] = (String) GivenAnsArray[i];&#xa;                &#xa;                if( mainData[i][2].equals( mainData[i][3]) ){&#xa;                    &#xa;                    mainData[i][4] = 1+&quot;&quot;;&#xa;                } else{ mainData[i][4] = 0+&quot;&quot;; }&#xa;                &#xa;                mainData[i][5] = (String) QuestionObject.get(&quot;Explanation&quot;);&#xa;                &#xa;            }&#xa;        &#xa;        String[] columnNames = { &quot;S.No&quot;, &quot;Question&quot;, &quot;Correct Answer&quot;, &quot;Your Answer&quot;, &quot;Points&quot;, &quot;Explaination&quot;};&#xa;&#xa;&#xa;TableModel tableModel = new DefaultTableModel(mainData, columnNames);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Component class="javax.swing.JButton" name="jButton1">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Close"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton2">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="ff" green="ff" red="ff" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Tahoma" size="24" style="0"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Message"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton2ActionPerformed"/>
          </Events>
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
