/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quizproject;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileReader;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
/**
 *
 * @author mzjet
 */
public class scoreMain extends javax.swing.JFrame {
    
    private String string = "";
    
    public void setString(String seatNumber) {
        this.string = seatNumber;
    }

    /**
     * Get the value of string
     *
     * @return the value of string
     */
    public String getString() {
//        System.out.println(string);
        return string;
    }
    
    
    String person;
    
    public void setNameP(String Person){
        person = Person;
    }
    public String getNameP(){
        return person;
    }

    /**
     * Set the value of string
     *
     * @param string new value of string
     */

    /**
     * Creates new form scoreMain
     */
    public scoreMain(String seatNumber, int person, String email) {
        
//        System.out.println(getString());
        
        
        setString(seatNumber);
        
        
        try{
            
            if(person == 0){
                String namee = checknamestd( getString() );
                setNameP(namee);
            } 
            else{
                String namee = getinfo(email,"Name" );
                setNameP(namee);
            }
        
        
        }catch(Exception e){e.printStackTrace();}
        
        String finalScore = "";
        try{
        seatNumber = getString();
        JSONParser parser = new JSONParser();

        Object obj = parser.parse(new FileReader("./Data/QuizScore.json"));

        JSONArray student = (JSONArray) obj;

        Object[] array = student.toArray();
        int index = 0;
        for(int i=0; i<array.length; i++){

            JSONObject StudentObject = (JSONObject) array[i];
            if(StudentObject.get("SeatNumber").equals(seatNumber) == true){
                index = i;
                finalScore =  StudentObject.get("Score").toString();
            }       
        }
        
        if(finalScore.equals("")){
            JSONObject StudentObject = (JSONObject) array[index];
            JOptionPane.showMessageDialog(this,StudentObject.get("Name") + " has not given the test");
//            System.exit(0);
            this.setVisible(false);

        }
        else{
            
        this.setVisible(true);
         
        seatNumber = getString();
        System.out.println(seatNumber);
            
        initComponents();
        setTitle("Quiz Sheet");
        setLocationRelativeTo(null);
        
        }
        
        }catch(Exception e){ e.printStackTrace();}
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        setname = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel1.setText("Score Sheet");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Score:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        try{
            String seatNumber = getString();
            JSONParser parser = new JSONParser();

            // get question and student

            Object obj = parser.parse(new FileReader("./Data/QuizScore.json"));

            JSONArray student = (JSONArray) obj;

            Object[] array = student.toArray();
            int index =0;

            for(int i=0; i<array.length; i++){

                JSONObject StudentObject = (JSONObject) array[i];
                if(StudentObject.get("SeatNumber").equals(seatNumber)) {
                    index = i;
                    break;

                }
            }

            JSONObject StudentObject = (JSONObject) array[index];
            jLabel3.setText(StudentObject.get("Score").toString());
        } catch(Exception e){e.printStackTrace();};

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Seat Number:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        try{
            String seatNumber = getString();
            JSONParser parser = new JSONParser();

            // get question and student

            Object obj = parser.parse(new FileReader("./Data/QuizScore.json"));

            JSONArray student = (JSONArray) obj;

            Object[] array = student.toArray();
            int index =0;

            for(int i=0; i<array.length; i++){

                JSONObject StudentObject = (JSONObject) array[i];
                if(StudentObject.get("SeatNumber").equals(seatNumber)) {
                    index = i;
                    break;

                }
            }

            JSONObject StudentObject = (JSONObject) array[index];
            jLabel5.setText(StudentObject.get("SeatNumber").toString());
        } catch(Exception e){e.printStackTrace();};

        setname.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        try{
            String seatNumber = getString();
            JSONParser parser = new JSONParser();

            // get question and student

            Object obj = parser.parse(new FileReader("./Data/QuizScore.json"));

            JSONArray student = (JSONArray) obj;

            Object[] array = student.toArray();
            int index =0;

            for(int i=0; i<array.length; i++){

                JSONObject StudentObject = (JSONObject) array[i];
                if(StudentObject.get("SeatNumber").equals(seatNumber)) {
                    index = i;
                    break;

                }
            }

            JSONObject StudentObject = (JSONObject) array[index];
            setname.setText(StudentObject.get("Name").toString());
        }catch(Exception e){ e.printStackTrace(); };

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Name:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        try{
            String seatNumber = getString();
            JSONParser parser = new JSONParser();

            // get question and student

            Object obj = parser.parse(new FileReader("./Data/QuizScore.json"));

            JSONArray student = (JSONArray) obj;

            Object[] array = student.toArray();
            int index =0;

            for(int i=0; i<array.length; i++){

                JSONObject StudentObject = (JSONObject) array[i];
                if(StudentObject.get("SeatNumber").equals(seatNumber)) {
                    index = i;
                    break;

                }
            }

            JSONObject StudentObject = (JSONObject) array[index];

            int getScore = Integer.parseInt( StudentObject.get("Score").toString().split("/")[0] );
            int totalScore = Integer.parseInt( StudentObject.get("Score").toString().split("/")[1] );

            double percentage = (getScore * 100 )/ totalScore;
            String result = "Pass";
            if(percentage>=50.00){ result = "Pass";}
            else{ result = "Fail";}
            jLabel8.setText(result);
        } catch(Exception e){e.printStackTrace();};

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Result:");

        try{
            String seatNumber = getString();
            System.out.print(seatNumber);
            JSONParser parser = new JSONParser();

            // get question and student

            Object obj = parser.parse(new FileReader("./Data/QuizScore.json"));

            JSONArray student = (JSONArray) obj;

            Object[] array = student.toArray();
            int index =0;

            for(int i=0; i<array.length; i++){

                JSONObject StudentObject = (JSONObject) array[i];
                if(StudentObject.get("SeatNumber").equals(seatNumber)) {
                    index = i;
                    break;

                }
            }

            JSONObject StudentObject = (JSONObject) array[index];
            JSONArray QuestionIndex = (JSONArray) StudentObject.get("QuestionIndex");
            Object[] QuestionIndexArray = QuestionIndex.toArray();

            JSONArray GivenAns = (JSONArray) StudentObject.get("GivenAnswers");
            Object[] GivenAnsArray = GivenAns.toArray();

            // End get question and student

            // Starting Reading Question

            Object obj2 = parser.parse(new FileReader("./Data/Final_Quiz.json"));
            //
            JSONObject jsonObject = (JSONObject) obj2;
            //
            JSONArray quiz = (JSONArray) jsonObject.get("Quiz");
            //
            Object[] array2 = quiz.toArray();

            // { "S.No","Question", "Correct Answer", "Your Answer", "Points", "Explaination"}

            String[][] mainData = new String[QuestionIndexArray.length][6];

            for(int i=0; i<QuestionIndexArray.length; i++){
                JSONObject QuestionObject = (JSONObject) array2[(int) Long.parseLong(QuestionIndexArray[i].toString()) ];

                mainData[i][0] = i+1+"";
                mainData[i][1] = (String) QuestionObject.get("Question");

                JSONArray Options = (JSONArray) QuestionObject.get("Options");
                Object[] OptionsArray = Options.toArray();

                int trueIndex = (int) Long.parseLong( QuestionObject.get("TrueIndex").toString() );

                mainData[i][2] = (String) OptionsArray[trueIndex];
                mainData[i][3] = (String) GivenAnsArray[i];

                if( mainData[i][2].equals( mainData[i][3]) ){

                    mainData[i][4] = 1+"";
                } else{ mainData[i][4] = 0+""; }

                mainData[i][5] = (String) QuestionObject.get("Explanation");

            }

            String[] columnNames = { "S.No", "Question", "Correct Answer", "Your Answer", "Points", "Explaination"};

            TableModel tableModel = new DefaultTableModel(mainData, columnNames);
            table.setModel( tableModel
            );
            UIDefaults defaults = UIManager.getLookAndFeelDefaults();
            if (defaults.get("Table.alternateRowColor") == null)
            defaults.put("Table.alternateRowColor", new Color(240, 240, 240));

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment( JLabel.CENTER );

            table.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
            table.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );

            table.setFont(new Font("Tahome",Font.PLAIN,15));
            int height = table.getRowHeight();
            table.setRowHeight(height+10);

            //        table.setEnabled(false);

            JTableHeader Theader = table.getTableHeader();
            Theader.setFont(new Font("Tahome",Font.BOLD,20) );

            Theader.setBackground(Color.WHITE);
            Theader.setForeground(Color.BLACK);

            table.getTableHeader().setOpaque(false);

            table.getTableHeader().setBackground(Color.BLACK);

            //            System.out.println(table.getValueAt(1, 4).toString());

            int column_index = 3;

            table.getColumnModel().getColumn(column_index).setCellRenderer(new DefaultTableCellRenderer() {
                @Override
                public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                    final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                    String submittedValue = table.getValueAt(row, 4).toString();

                    if (submittedValue.equals("1")) {

                        c.setBackground(Color.decode("#4dff4d"));
                        c.setForeground(Color.BLACK);
                        c.setFont(new Font("Tahome",Font.PLAIN,15));
                    }
                    else {
                        c.setBackground(Color.decode("#ff3333"));
                        c.setForeground(Color.WHITE);
                        c.setFont(new Font("Tahome",Font.PLAIN,15));
                    }

                    //                int rendererWidth = c.getPreferredSize().width;
                    //                    TableColumn tableColumn = table.getColumnModel().getColumn(column);
                    //                    tableColumn.setPreferredWidth( Math.max(rendererWidth + table.getIntercellSpacing().width,tableColumn.getPreferredWidth()));
                    //
                    //                DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
                    //                rightRenderer.setHorizontalAlignment(JLabel.CENTER);
                    //                table.getColumnModel().getColumn(column).setCellRenderer(rightRenderer);

                    return c;
                }

            });

            TableColumn column1 = table.getColumnModel().getColumn(1);
            column1.setPreferredWidth(300);

            TableColumn column5 = table.getColumnModel().getColumn(5);
            column5.setPreferredWidth(450);

            TableColumn column2 = table.getColumnModel().getColumn(2);
            column2.setPreferredWidth(300);

            TableColumn column3 = table.getColumnModel().getColumn(3);
            column3.setPreferredWidth(300);

            TableColumn column4 = table.getColumnModel().getColumn(4);
            column4.setPreferredWidth(100);

        }catch(Exception e){e.printStackTrace();};
        jScrollPane2.setViewportView(table);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton2.setText("Message");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(425, 425, 425)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 400, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(79, 79, 79)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setname, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(144, 144, 144))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(setname, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, 66)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    public String getinfo(String email, String param) throws Exception {
      
        String parameter = "";

        try{
            
        JSONParser parser = new JSONParser();

        Object obj = parser.parse(new FileReader("./Data/TeachersData.json"));

        JSONArray teacher = (JSONArray) obj;
        
        Object[] teacherArray = teacher.toArray();
        
        for (int i=0; i<teacherArray.length; i++){
            
            JSONObject TeacherObject = (JSONObject) teacherArray[i];
            
            if(TeacherObject.get("Email").toString().equals(email)){
                    parameter = TeacherObject.get(param).toString();
                    break;
                }  
            }
  
        
        }catch(Exception e){e.printStackTrace();}
        
        return parameter;
    }
    
    public String checknamestd(String seatNumber)throws Exception{
       
        JSONParser parser = new JSONParser();

        Object obj = parser.parse(new FileReader("./Data/QuizScore.json"));

        JSONArray student = (JSONArray) obj;

        Object[] array = student.toArray();
        String name="";
        
        for(int i=0; i<array.length; i++){

            JSONObject StudentObject = (JSONObject) array[i];
            if(StudentObject.get("SeatNumber").equals(seatNumber)){
                 name =  StudentObject.get("Name").toString();
            }    
        }
        return name;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        try{
            
        String namee = getNameP();
        new messageBox(getString() , namee).setVisible(true);
        
        }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_jButton2ActionPerformed

//    private String string = "";
//
//    /**
//     * Get the value of string
//     *
//     * @return the value of string
//     */
//    public String getString() {
////        System.out.println(string);
//        return string;
//    }
//
//    /**
//     * Set the value of string
//     *
//     * @param string new value of string
//     */
//    public void setString(String seatNumber) {
//        this.string = seatNumber;
//    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(scoreMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(scoreMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(scoreMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(scoreMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new scoreMain("B19102001",0,"a@a.com").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel setname;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
